AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-swagger-api-sandbox

  SAM Template for swagger generated API Sandbox

Globals:
  Function:
    Timeout: 3

Parameters:
  SwaggerBucket:
    Type: String
    Description: The uploaded swagger.yaml
  StageName:
    Type: String
    Description: The API stage name

Resources:

  SwaggerAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      Cors: "'*'"
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: !Ref 'SwaggerBucket'
  UploadMovieFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/upload_movie
      Handler: app.lambda_handler
      Runtime: python3.8
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref SwaggerAPI
            Path: /src/upload_movie
            Method: GET
  UploadMovieFunctionPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref UploadMovieFunction
      Principal: apigateway.amazonaws.com

  ConvertMovieFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/convert_movie
      Handler: app.lambda_handler
      Runtime: python3.8
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref SwaggerAPI
            Path: /src/comvert_movie
            Method: GET
  ConvertMovieFunctionPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ConvertMovieFunction
      Principal: apigateway.amazonaws.com

  UpdateMovieFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/update_movie
      Handler: app.lambda_handler
      Runtime: python3.8
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref SwaggerAPI
            Path: /src/update_movie
            Method: GET
  UpdateMovieFunctionPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref UpdateMovieFunction
      Principal: apigateway.amazonaws.com

  GetMusicFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/get_music
      Handler: app.lambda_handler
      Runtime: python3.8
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref SwaggerAPI
            Path: /src/get_music
            Method: GET
  GetMusicFunctionPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetMusicFunction
      Principal: apigateway.amazonaws.com

  
