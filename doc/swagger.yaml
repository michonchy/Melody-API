swagger: "2.0"
info:
  description: "swagger"
  version: "1.0.0"
  title: "Melody API App"
basePath: /${StageName}
schemes:
  - "https"
paths:
  /movie/upload:
    post:
      tags:
        - "movie"
      summary: Root
      description: 
        Root Method.
      consumes:
        - multipart/form-data
      produces:
        - "application/json"
      parameters:
        - in: formData
          name: upfile
          type: file
          description: The file to upload.
          x-mimetype: movie/mp4
      responses:
        "201":
          description: "動画ファイルが正常に登録された"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                description: "uuid"
              name:
                type: "string"
                example: "doggie"
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UploadMovieFunction.Arn}/invocations
        passthroughBehavior: when_no_templates
        httpMethod: POST
        type: aws_proxy
  /movie/{usersId}/convert:
    put:
      tags:
        - "movie"
      summary: "任意のMP4動画ファイルを音声ファイルに変換する"
      operationId: "convertMovie"
      parameters:
         - in: body
           name: param
           description: The file to upload.
           schema:
            type: "object"
            properties:
              id:
                type: "string"
                description: "uuid"
         - in: "path"
           name: "usersId"
           description: "動画を所持している人のユーザーID"
           required: true
           type: "integer"
           format: "int64"
      responses:
        "201":
          description: "動画ファイルが正常に変換された"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                description: "uuid"
              name:
                type: "string"
                example: "doggie"
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ConvertMovieFunction.Arn}/invocations
        passthroughBehavior: when_no_templates
        httpMethod: POST
        type: aws_proxy
  /movie/{usersId}/{moviesId}:
    put:
      tags:
        - "movie"
      summary: "任意のMP4動画ファイルを音声ファイルに変換する"
      operationId: "updateMovie"
      parameters:
         - in: body
           name: param
           description: The file to upload.
           schema:
            type: "object"
            properties:
              name:
                type: "string"
                description: "uuid"
         - in: "path"
           name: "usersId"
           description: "動画を所持している人のユーザーID"
           required: true
           type: "integer"
           format: "int64"
         - in: "path"
           name: "moviesId"
           description: "動画のID"
           required: true
           type: "string"
      responses:
        "201":
          description: "動画ファイルが正常に更新された"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                description: "uuid"
              name:
                type: "string"
                example: "doggie"
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateMovieFunction.Arn}/invocations
        passthroughBehavior: when_no_templates
        httpMethod: POST
        type: aws_proxy
  /music/{usersId}/{musicsId}:
    get:
      tags:
        - "music"
      summary: "音声ファイルを取得する"
      operationId: "getMusic"
      parameters:
         - in: "path"
           name: "usersId"
           description: "動画を所持している人のユーザーID"
           required: true
           type: "integer"
           format: "int64"
         - in: "path"
           name: "musicsId"
           description: "音声ファイルのID"
           required: true
           type: "string"
      responses:
        "200":
          description: "音声ファイルが取得できた"
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetMusicFunction.Arn}/invocations
        passthroughBehavior: when_no_templates
        httpMethod: POST
        type: aws_proxy
 
